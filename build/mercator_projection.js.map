{"version":3,"sources":["../src/mercator_projection.es6"],"names":[],"mappings":";;;;;;;;;AAAA;;IAAY,U;;;;;;IAEN,kB;AAEF,kCAAc;AAAA;;AACV,aAAK,EAAL,GAAU,KAAK,IAAL,CAAU,CAAC,CAAX,CAAV;AACH;;;;yCAEgB,I,EAAM;AACnB,gBAAI,QAAQ,EAAC,SAAS,CAAV,EAAa,QAAQ,CAArB,EAAZ;AACA,gBAAI,SAAS,KAAK,SAAL,CAAe,KAAK,GAApB,CAAb;AACA,gBAAI,SAAS,KAAK,SAAL,CAAe,KAAK,GAApB,CAAb;AACA,kBAAM,KAAN,GAAc,MAAM,KAAK,GAAL,CAAS,CAAC,IAAI,KAAK,GAAL,CAAS,MAAT,CAAL,KAA0B,IAAI,KAAK,GAAL,CAAS,MAAT,CAA9B,CAAT,CAAN,GAAkE,WAAW,oBAA3F;AACA,kBAAM,IAAN,GAAa,SAAS,WAAW,oBAAjC;AACA,mBAAO,KAAP;AACH;;;yCAEgB,K,EAAO;AACpB,gBAAI,QAAQ,EAAC,OAAO,CAAR,EAAW,OAAO,CAAlB,EAAZ;AACA,kBAAM,GAAN,GAAY,KAAK,QAAL,CAAc,MAAM,IAAN,GAAa,WAAW,oBAAtC,CAAZ;AACA,kBAAM,GAAN,GAAY,KAAK,QAAL,CAAc,IAAI,KAAK,IAAL,CAAU,KAAK,GAAL,CAAS,MAAM,KAAN,GAAc,WAAW,oBAAlC,CAAV,CAAJ,GAAyE,MAAM,KAAK,EAAlG,CAAZ;AACA,mBAAO,KAAP;AACH;;;4CAEmB,W,EAAa;AAC7B,gBAAI,WAAJ;AACA,gBAAI,WAAJ;AACA,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,YAAY,MAAhC,EAAwC,GAAxC,EAA6C;AACzC,mBAAG,CAAH,IAAQ,OAAO,CAAP,EAAU,CAAlB;AACA,mBAAG,CAAH,IAAQ,OAAO,CAAP,EAAU,CAAlB;AACH;;AAED,gBAAI,OAAO,OAAO,EAAP,CAAX;AACA,gBAAI,OAAO,OAAO,EAAP,CAAX;AACA,mBAAO,CAAC,EAAC,KAAK,IAAN,EAAY,KAAK,IAAjB,EAAD,CAAP;AACH;;;2CAEkB,M,EAAQ;AACvB,gBAAI,KAAK,IAAI,OAAO,OAAO,MAAd,CAAJ,EAAT;AACA,gBAAI,KAAK,IAAI,OAAO,OAAO,MAAd,CAAJ,EAAT;AACA,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,OAAO,MAA3B,EAAmC,GAAnC,EAAwC;AACpC,mBAAG,CAAH,IAAQ,OAAO,CAAP,EAAU,CAAlB;AACA,mBAAG,CAAH,IAAQ,OAAO,CAAP,EAAU,CAAlB;AACH;;AAED,gBAAI,OAAO,OAAO,EAAP,CAAX;AACA,gBAAI,OAAO,OAAO,EAAP,CAAX;AACA,mBAAO,CAAC,EAAC,KAAK,IAAN,EAAY,KAAK,IAAjB,EAAD,CAAP;AACH;;;+BAEM,I,EAAM;AACT,gBAAI,MAAM,MAAV;AACA,iBAAK,IAAI,CAAT,IAAc,IAAd,EAAoB;AAChB,sBAAO,IAAI,GAAJ,GAAU,CAAV,GAAc,GAArB;AACH;AACD,mBAAO,GAAP;AACH;;;+BAEM,I,EAAM;AACT,gBAAI,MAAM,CAAC,MAAX;AACA,iBAAK,IAAI,CAAT,IAAc,IAAd,EAAoB;AAChB,sBAAO,IAAI,GAAJ,GAAU,CAAV,GAAc,GAArB;AACH;AACD,mBAAO,GAAP;AACH;;;kCAES,M,EAAQ;AACd,mBAAO,UAAU,KAAK,EAAL,GAAU,GAApB,CAAP;AACH;;;iCAEQ,O,EAAS;AACd,mBAAO,WAAW,MAAM,KAAK,EAAtB,CAAP;AACH;;;;;;QAGG,kB,GAAA,kB","file":"mercator_projection.js","sourcesContent":["import * as projection from './world_values';\n\nclass MercatorProjection {\n\n    constructor() {\n        this.pi = Math.acos(-1);\n    }\n\n    convertGeoToMerc(geoP) {\n        let mercP = {\"north\": 0, \"east\": 0};\n        let radLat = this.toRadians(geoP.lat);\n        let radLon = this.toRadians(geoP.lon);\n        mercP.north = 0.5 * Math.log((1 + Math.sin(radLat)) / (1 - Math.sin(radLat))) * projection.WGS84_SPHERICAL_AXIS;\n        mercP.east = radLon * projection.WGS84_SPHERICAL_AXIS;\n        return mercP;\n    }\n\n    convertMercToGeo(mercP) {\n        let mercG = {\"lat\": 0, \"lon\": 0};\n        mercG.lon = this.toDegree(mercP.east / projection.WGS84_SPHERICAL_AXIS);\n        mercG.lat = this.toDegree(2 * Math.atan(Math.exp(mercP.north / projection.WGS84_SPHERICAL_AXIS)) - 0.5 * Math.PI);\n        return mercG;\n    }\n\n    getUpperRightExtent(coordinates) {\n        let xs;\n        let ys;\n        for (let i = 0; i < coordinates.length; i++) {\n            xs[i] = coords[i].x;\n            ys[i] = coords[i].y;\n        }\n\n        let maxX = getMax(xs);\n        let maxY = getMax(ys);\n        return [{\"x\": maxX, \"y\": maxY}];\n    }\n\n    getLowerLeftExtent(coords) {\n        let xs = new double[coords.length];\n        let ys = new double[coords.length];\n        for (let i = 0; i < coords.length; i++) {\n            xs[i] = coords[i].x;\n            ys[i] = coords[i].y;\n        }\n\n        let minX = getMin(xs);\n        let minY = getMin(ys);\n        return [{\"x\": minX, \"y\": minY}];\n    }\n\n    getMin(vals) {\n        let min = 999999;\n        for (let d in vals) {\n            min = (d < min ? d : min);\n        }\n        return min;\n    }\n\n    getMax(vals) {\n        let max = -999999;\n        for (let d in vals) {\n            max = (d > max ? d : max);\n        }\n        return max;\n    }\n\n    toRadians(degree) {\n        return degree * (this.pi / 180);\n    }\n\n    toDegree(radians) {\n        return radians * (180 / this.pi);\n    }\n}\n\nexport {MercatorProjection};\n\n\n"]}