{"version":3,"sources":["../src/zoom_level.es6"],"names":[],"mappings":"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","file":"zoom_level.js","sourcesContent":["import * as worldValues from './world_values';\nimport * as mercProj from './mercator_projection';\n\nclass ZoomLevel {\n\n    constructor(zoomLevel) {\n        this.zoom = zoomLevel;\n        this.matrixSideSize = Math.pow(2, this.zoom);\n        this.horizontalMapTileSize = worldValues.EQUATOR / this.matrixSideSize;\n        this.verticalMapTileSize = (2 * worldValues.MERIDIAN) / this.matrixSideSize;\n        this.mercatorProjection = new mercProj.MercatorProjection();\n    }\n\n    getXYOfTileContainingPoint(x, y, projectionType) {\n        let res = null;\n        if (projectionType == worldValues.PROJECTION_TYPE_WEBMERCATOR) {\n            res = this.mercatorProjection.getTileXYForMercatorPoint(x, y);\n        } else if (projectionType == worldValues.PROJECTION_TYPE_WGS84) {\n            res = this.mercatorProjection.getTileXYForWGS84Point(x, y);\n        }\n        return res;\n    }\n\n    getTileXYForWGS84Point(geoPoint) {\n        if (geoPoint.lon < -179.999999 || geoPoint.lon > 179.999999 || geoPoint.lat < -85.0511 || geoPoint.lat > 85.0511) {\n            throw \"TILES_COORD_OUT_OF_RANGE\";\n        }\n        let mercPoint = this.mercatorProjection.convertGeoToMerc(geoPoint);\n        return this.getTileXYForMercatorPoint(mercPoint);\n    }\n\n    getTileXYForMercatorPoint(mercPoint) {\n        let tileXY = {\"x\": 0, \"y\": 0};\n        tileXY.x = Math.floor((mercPoint.east + (worldValues.EQUATOR / 2.0)) / this.horizontalMapTileSize);\n        tileXY.y = Math.floor((worldValues.MERIDIAN - mercPoint.north) / this.verticalMapTileSize);\n        return tileXY;\n    }\n\n\n//Mercator coordinates stretch from -20037508.34 to 20037508.34 in each direction.\n    getMercatorExtentForTile(x, y) {\n        let minEast = (x * this.horizontalMapTileSize) - (worldValues.EQUATOR / 2.0);\n        let maxEast = ((x + 1.0) * this.horizontalMapTileSize) - (worldValues.EQUATOR / 2.0);\n        let maxNorth = worldValues.MERIDIAN - (y * this.verticalMapTileSize);\n        let minNorth = worldValues.MERIDIAN - ((y + 1.0) * this.verticalMapTileSize);\n        return {\"minEast\": minEast, \"maxEast\": maxEast, \"minNorth\": minNorth, \"maxNorth\": maxNorth};\n    }\n\n    getWGS84ExtentForTile(x, y) {\n        let mercExtent = this.getMercatorExtentForTile(x, y);\n        let maxMerc = {\"north\": mercExtent.maxNorth, \"east\": mercExtent.maxEast};\n        let minMerc = {\"north\" : mercExtent.minNorth, \"east\": mercExtent.minEast};\n        let maxGeo = {}\n        let minGeo = this.mercatorProjection.convertMercToGeo(minMerc);\n        return \"not yet implemented\";\n    }\n\n    getZoomLevelCardinality() {\n        return Math.pow(this.matrixSideSize, 2);\n    }\n\n}\n\nlet zoomLevel = new ZoomLevel(10);\nconsole.log(zoomLevel.getZoomLevelCardinality());\nlet p = {\"lon\": 10, \"lat\": 45};\nconsole.log(\"Geo point: \", p)\nlet mp = zoomLevel.mercatorProjection.convertGeoToMerc(p);\nconsole.log(\"Converted mercator point: \", mp);\nlet gp = zoomLevel.mercatorProjection.convertMercToGeo(mp);\nconsole.log(\"Re-converted geo point: \", gp);\nlet xy = zoomLevel.getTileXYForWGS84Point(p);\nconsole.log(\"Tiles coord: \", xy);\nlet mercatorExtent = zoomLevel.getMercatorExtentForTile(xy.x, xy.y)\nconsole.log(\"Mercator extent: \", mercatorExtent);"]}