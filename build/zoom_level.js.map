{"version":3,"sources":["../src/zoom_level.es6"],"names":[],"mappings":"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","file":"zoom_level.js","sourcesContent":["import * as worldValues from './world_values';\nimport * as mercProj from './mercator_projection';\nimport {logger} from './logger';\n\nclass ZoomLevel {\n\n    constructor(zoomLevel) {\n        logger.log(\"New ZoomLevel:  \", zoomLevel);\n        this.zoom = Math.floor(zoomLevel);\n        this.matrixSideSize = Math.pow(2, this.zoom);\n        this.horizontalMapTileSize = worldValues.EQUATOR / this.matrixSideSize;\n        this.verticalMapTileSize = (2 * worldValues.MERIDIAN) / this.matrixSideSize;\n        this.mercatorProjection = new mercProj.MercatorProjection();\n    }\n\n    getXYOfTileContainingPoint(x, y, projectionType) {\n        logger.log(\"getXYOfTileContainingPoint, x, y, projectionType: \", x, y, projectionType);\n        let res = null;\n        if (projectionType == worldValues.PROJECTION_TYPE_WEBMERCATOR) {\n            res = this.mercatorProjection.getTileXYForMercatorPoint(x, y);\n        } else if (projectionType == worldValues.PROJECTION_TYPE_WGS84) {\n            res = this.mercatorProjection.getTileXYForWGS84Point(x, y);\n        }\n        logger.log(\"getXYOfTileContainingPoint, res: \", res);\n        return res;\n    }\n\n    getTileXYForWGS84Point(geoPoint) {\n        logger.log(\"getTileXYForWGS84Point, geoPoint: \", geoPoint);\n        if (geoPoint.lon < -179.999999 || geoPoint.lon > 179.999999 || geoPoint.lat < -85.0511 || geoPoint.lat > 85.0511) {\n            throw \"TILES_COORD_OUT_OF_RANGE\";\n        }\n        let mercPoint = this.mercatorProjection.convertGeoToMerc(geoPoint);\n        let res = this.getTileXYForMercatorPoint(mercPoint);\n        logger.log(\"getTileXYForWGS84Point, res: \", res);\n        return res;\n    }\n\n    getTileXYForMercatorPoint(mercPoint) {\n        logger.log(\"getTileXYForMercatorPoint, mercPoint: \", mercPoint);\n        let tileXY = {\"x\": 0, \"y\": 0};\n        tileXY.x = Math.floor((mercPoint.east + (worldValues.EQUATOR / 2.0)) / this.horizontalMapTileSize);\n        tileXY.y = Math.floor((worldValues.MERIDIAN - mercPoint.north) / this.verticalMapTileSize);\n        logger.log(\"getTileXYForMercatorPoint, tileXY: \", tileXY);\n        return tileXY;\n    }\n\n\n//Mercator coordinates stretch from -20037508.34 to 20037508.34 in each direction.\n    getMercatorExtentForTile(tilex, tiley) {\n        let x = Math.floor(tilex);\n        let y = Math.floor(tiley);\n        logger.log(\"getMercatorExtentForTile, zoom \", this.zoom, \": \", x, y);\n        let minEast = (x * this.horizontalMapTileSize) - (worldValues.EQUATOR / 2.0);\n        let maxEast = ((x + 1.0) * this.horizontalMapTileSize) - (worldValues.EQUATOR / 2.0);\n        let maxNorth = worldValues.MERIDIAN - (y * this.verticalMapTileSize);\n        let minNorth = worldValues.MERIDIAN - ((y + 1.0) * this.verticalMapTileSize);\n        let res = {\"minEast\": minEast, \"maxEast\": maxEast, \"minNorth\": minNorth, \"maxNorth\": maxNorth};\n        logger.log(\"getMercatorExtentForTile, res: \", res);\n        return res;\n    }\n\n    getWGS84ExtentForTile(tilex, tiley) {\n        let x = Math.floor(tilex);\n        let y = Math.floor(tiley);\n        logger.log(\"getWGS84EtentForTile, zoom \", this.zoom, \": \", x, y);\n        let mercExtent = this.getMercatorExtentForTile(x, y);\n        let maxMerc = {\"north\": mercExtent.maxNorth, \"east\": mercExtent.maxEast};\n        let minMerc = {\"north\": mercExtent.minNorth, \"east\": mercExtent.minEast};\n        let maxGeo = this.mercatorProjection.convertMercToGeo(maxMerc);\n        let minGeo = this.mercatorProjection.convertMercToGeo(minMerc);\n        let res = {\"minLon\": minGeo.lon, \"minLat\": minGeo.lat, \"maxLon\": maxGeo.lon, \"maxLat\": maxGeo.lat};\n        logger.log(\"getWGS84EtentForTile, res: \", res);\n        return res;\n    }\n\n    getZoomLevelCardinality() {\n        return Math.pow(this.matrixSideSize, 2);\n    }\n\n}\n\nexport {ZoomLevel};\n\n// let z = 19;\n// let zoomLevel = new ZoomLevel(z);\n// logger.log(\"Zoom level \", z, \" cardinality \",  zoomLevel.getZoomLevelCardinality());\n// let p = {\"lon\": 10, \"lat\": 46};\n// logger.log(\"Geo point: \", p)\n// let mp = zoomLevel.mercatorProjection.convertGeoToMerc(p);\n// logger.log(\"Converted mercator point: \", mp);\n// let gp = zoomLevel.mercatorProjection.convertMercToGeo(mp);\n// logger.log(\"Re-converted geo point: \", gp);\n// let xy = zoomLevel.getTileXYForWGS84Point(p);\n// logger.log(\"Tiles coord: \", xy);\n// let mercatorExtent = zoomLevel.getMercatorExtentForTile(xy.x, xy.y)\n// logger.log(\"Mercator extent: \", mercatorExtent);\n// let geoExtent = zoomLevel.getWGS84ExtentForTile(xy.x, xy.y)\n// logger.log(\"WGS84 extent: \", geoExtent);"]}